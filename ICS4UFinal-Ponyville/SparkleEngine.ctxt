#BlueJ class context
comment0.target=SparkleEngine
comment0.text=\n\ SparkleEngine\ -\ Very\ portable\ &\ reusable\ engine\ that\ wrapps\ various\ functions.\n\ All\ static\ methods.\n\ Rooted\ from\ grade\ 11\ final\ project's\ engine,\ developed\ largely\ since\ then.\n\ Making\ the\ engine\ an\ actor\ to\ prevent\ repeatitively\ call\ dt\ \=\ new\ Date().\n\ \n\ @author\ Xuanxi\ Jiang\n\ @version\ 0.3\n
comment1.params=img\ brt
comment1.target=greenfoot.GreenfootImage\ setBrightness(greenfoot.GreenfootImage,\ int)
comment10.params=in\ f\ mxLength
comment10.target=java.lang.String\ wordWrap(java.lang.String,\ greenfoot.Font,\ int)
comment11.params=
comment11.target=long\ getTime()
comment12.params=c\ f\ x\ y\ text\ in
comment12.target=greenfoot.GreenfootImage\ drawLable(greenfoot.Color,\ greenfoot.Font,\ int,\ int,\ java.lang.String,\ greenfoot.GreenfootImage)
comment2.params=img\ perc
comment2.target=greenfoot.GreenfootImage\ turnRed(greenfoot.GreenfootImage,\ int)
comment3.params=img\ perc
comment3.target=greenfoot.GreenfootImage\ turnBlue(greenfoot.GreenfootImage,\ int)
comment4.params=img\ perc
comment4.target=greenfoot.GreenfootImage\ revColor(greenfoot.GreenfootImage,\ int)
comment5.params=shadeFactor\ img
comment5.target=greenfoot.GreenfootImage\ shade(double,\ greenfoot.GreenfootImage)
comment6.params=brightFactor\ img
comment6.target=greenfoot.GreenfootImage\ brighten(double,\ greenfoot.GreenfootImage)
comment7.params=mass\ cof\ gravity
comment7.target=double\ getFrict(double,\ double,\ double)
comment7.text=\n\ Get\ force\ of\ friction\ of\ object\ in\ N\n\ Helpful\ in\ calculating\ the\ needed\ force\ to\ maintain\ velocity,\ etc.\n\ Remember\:\ to\ maintain\ constant\ velocity\:\ cva\ \=\ getFrict()/mass\n\ (cva\ \=\ acceleration\ to\ maintain\ constant\ velocity)\n\ Only\ works\ if\ y\ axis\ has\ no\ force\ other\ than\ gravity\ and\ normal\ force.\n\ If\ y\ axis\ has\ force\:\ real\ friction\ \=\ getFrict()\ +\ yForce*u\n
comment8.params=vel\ accel\ mass\ cof\ gravity\ time
comment8.target=double\ dvDueToFrict(double,\ double,\ double,\ double,\ double,\ double)
comment8.text=\n\ delta\ velocity\ due\ to\ friction\n\ F\ \=\ m*a,\ Ff\ \=\ mass*gravity*u\ (mass*gravity)\ \=\ N,\ u\ \=\ kinetic\ friction\ coefficient\n\ vel,\ accel,\ time\n\ xf\ (force\ on\ x\ axis)\ \=\ \n\ usage\:\ spd\ \=\ spd\ -\ dvDueToFrict();\n
comment9.params=font\ text
comment9.target=int\ getStringWidth(greenfoot.Font,\ java.lang.String)
numComments=13
